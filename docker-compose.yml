services:

  frontend:
    build: ./frontend
    container_name: frontend
    expose:
      - "3000"
    volumes:
      - "${PWD}/frontend/app:/app"
    depends_on:
      - api
    restart: unless-stopped

  api:
    build: ./backend
    container_name: fastapi
    expose:
      - "8000"
    volumes:
      - "${PWD}/backend:/app"
    depends_on:
      database:
        condition: service_healthy
    env_file:
      .env
    restart: unless-stopped

  database:
    image: postgres:15.3
    env_file:
      .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "dev"]
      interval: 10s
      retries: 10
      timeout: 5s
    restart: unless-stopped

  redis:
    image: redis/redis-stack-server:latest
    ports:
      - "6300:6300"
    restart: unless-stopped

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "3000:8080"
    depends_on:
      - frontend
      - api
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:5050"
    env_file:
      .env
    depends_on:
      - database
    restart: unless-stopped

  # radarr:
  #   image: lscr.io/linuxserver/radarr:latest
  #   container_name: radarr
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Etc/UTC
  #   volumes:
  #     - ./radarr/data:/config
  #     - ./radarr/movies:/movies
  #     - ./radarr/downloads:/downloads
  #   ports:
  #     - 7878:7878
  #   restart: unless-stopped
